Antes de qualquer execu√ß√£o, leia cuidadosamente o cen√°rio abaixo:

Arquitetura atual

Aplica√ß√£o monol√≠tica: front-end e back-end compilados e servidos pela mesma URL.

N√£o h√° microsservi√ßo separado: embora exista uma API REST, ela n√£o est√° isolada em um dom√≠nio distinto.

Problema de CORS / Allowed Hosts
Ao tentar carregar o front-end, surge o seguinte erro de request bloqueada:

pgsql
Copiar
Editar
Blocked request. This host ("08fce044-cfda-4863-971b-b69d26c7a26d-00-19b59kd3rb6hz.spock.replit.dev") is not allowed.
To allow this host, add "08fce044-cfda-4863-971b-b69d26c7a26d-00-19b59kd3rb6hz.spock.replit.dev" to `server.allowedHosts` in vite.config.js.
Solu√ß√£o proposta:

No arquivo vite.config.js, localize a se√ß√£o server.allowedHosts e acrescente o host acima.

Reinicie o servidor de desenvolvimento para aplicar a configura√ß√£o.

Comportamento observado ap√≥s deploy
Em vez de exibir a interface, o navegador recebe apenas o payload JSON da API:

json
Copiar
Editar
{
  "message":"üè• HUBB Assist SaaS API",
  "version":"1.0.0",
  "status":"online",
  "environment":"production",
  "docs_url":"/docs",
  "redoc_url":"/redoc",
  "frontend_url":"https://hubb-assist-mono-fronteback-v1.replit.app:3000/"
}
Isso indica que o servidor de back-end est√° servindo a API no lugar dos arquivos est√°ticos do front-end.

Recomenda√ß√µes t√©cnicas

Isolamento de dom√≠nios: configure o front-end para ser servido em uma URL distinta (por exemplo, https://app.seu-dominio.com) e a API em https://api.seu-dominio.com.

Proxy Vite: se mantiver ambos no mesmo host, ajuste em vite.config.js:

js
Copiar
Editar
server: {
  proxy: {
    '/api': {
      target: 'http://localhost:5000',
      changeOrigin: true,
      secure: false
    }
  },
  allowedHosts: [
    'localhost',
    '08fce044-cfda-4863-971b-b69d26c7a26d-00-19b59kd3rb6hz.spock.replit.dev'
  ]
}
Rotas est√°ticas: na configura√ß√£o do servidor (Express, Fastify, etc.), garanta que o middleware de arquivos est√°ticos seja carregado antes de qualquer rota de API:

js
Copiar
Editar
app.use(express.static(path.resolve(__dirname, 'dist')));
app.use('/api', apiRouter);
Valida√ß√£o p√≥s-deploy: confirme via rede de desenvolvedor no navegador (DevTools > Network) que as solicita√ß√µes ao front-end retornam arquivos .js, .css e n√£o JSON da API.

Com essas altera√ß√µes, o front-end dever√° carregar corretamente e o erro de host bloqueado ser√° resolvido.